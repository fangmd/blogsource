---
title: CSS w3school
date: 2016-12-26 13:18:12
tags: [css]
category: HTML

---

# CSS 基础教程

## CSS 简介

## CSS 概述

- CSS 指层叠样式表 (Cascading Style Sheets)
- 样式定义如何显示 HTML 元素
- 样式通常存储在 ***样式表*** 中
- 把样式添加到 HTML 4.0 中，是为了解决内容与表现分离的问题
- 外部样式表可以极大提高工作效率
- 外部样式表通常存储在 CSS 文件中
- 多个样式定义可层叠为一

<!--more-->


### 样式表极大地提高了工作效率

样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。

### 多重样式将层叠为一个

样式设置的方式： 越高优先级越大

1. 浏览器缺省设置
2. 外部样式表
3. 内部样式表（位于 <head> 标签内部）
4. 内联样式（在 HTML 元素内部）

## CSS 基础语法

CSS语法有两个部分组成： 

1. 选择器 ：表示了这条 css 语句作用于的 html 标签
2. 多条声明：每条声明由一个属性和一个值组成

```css
selector {declaration1; declaration2; ... declarationN }
```

### 记得写引号

声明中的值如果要声明多个，需要给值加引号：

```css
p {font-family: "sans serif";}
```

### 多重声明

多重声明需要用 `;` 分开

通常是一条声明一行，方便阅读

```css
body {
  color: #000;
  background: #fff;
  margin: 0;
  padding: 0;
  font-family: Georgia, Palatino, serif;
  }
```

## CSS 高级语法

### 选择器分组

使用 `,` 分割：

```css
h1,h2,h3,h4,h5,h6 {
  color: green;
  }
```

### 继承及其问题

根据 CSS，子元素从父元素继承属性。但是它并不总是按此方式工作。

但是 Netscape 4 不支持继承：处理方式

```css
body  {
     font-family: Verdana, sans-serif;
     }

p, td, ul, ol, li, dl, dt, dd  {
     font-family: Verdana, sans-serif;
     }
```

## CSS 派生选择器

通过依据元素在其位置的上下文关系来定义样式，你可以使标记更加简洁。

例子：下面 css 表示 li 标签内的 string 标签内的内容才是斜体的，***注意没有`,`不是选择器分组***
```css
li strong {
    font-style: italic;
    font-weight: normal;
  }
```

## CSS id 选择器

id 选择器语法： `#[id]{...}`

### id 选择器和派生选择器

在现代布局中，id 选择器常常用于建立派生选择器。

例子：
```css
#sidebar p {
    font-style: italic;
    text-align: right;
    margin-top: 0.5em;
    }
```

## CSS 类选择器

类选择器以一个点号显示：
```css
.center {text-align: center}
```

class 也可被用作派生选择器：

```css
.fancy td {
    color: #f60;
    background: #666;
    }
```

## CSS 属性选择器

为拥有指定属性的 HTML 元素设置样式

语法：
- [attribute] 用于选取带有指定属性的元素。
- [attribute=value]   用于选取带有指定属性和值的元素。
- [attribute~=value]  用于选取属性值中包含指定词汇的元素。
- [attribute|=value]  用于选取带有以指定值开头的属性值的元素，该值必须是整个单词。
- [attribute^=value]  匹配属性值以指定值开头的每个元素。
- [attribute$=value]  匹配属性值以指定值结尾的每个元素。
- [attribute*=value]  匹配属性值中包含指定值的每个元素。

例子：

```css
[title]
{
color:red;
}
```

包含特定值的属性：

例子：

```css
[title~=hello] { color:red; }
```

### 设置表单的样式

```css
input[type="text"]
{
  width:150px;
  display:block;
  margin-bottom:10px;
  background-color:yellow;
  font-family: Verdana, Arial;
}

input[type="button"]
{
  width:120px;
  margin-left:35px;
  display:block;
  font-family: Verdana, Arial;
}
```

## 如何创建 CSS

### 外部样式表

添加例子：
```html
<head>
<link rel="stylesheet" type="text/css" href="mystyle.css" />
</head>
```

### 内部样式表

```html
<head>
<style type="text/css">
  hr {color: sienna;}
  p {margin-left: 20px;}
  body {background-image: url("images/back40.gif");}
</style>
</head>
```


# CSS 样式

## CSS background

- background-color
- background-image: url(/i/eg_bg_04.gif);
- background-repeat: repeat-y;  ／no-repeat ／ repeat-x
- background-position:center;   ／top、bottom、left、right 和 center ／ px, cm/ 百分数值
- background-attachment:fixed

## CSS 文本

可以改变文本的颜色、字符间距，对齐文本，装饰文本，对文本进行缩进，等等。

- text-indent: 5em; 缩进文本 /使用百分比值(相对于缩进元素父元素的宽度)
- text-align:center;    对齐 / justify ...
- word-spacing: 9em;    字间隔
- letter-spacing: 20px; /em    字母间隔
- text-transform: uppercase; 字符转换  / none,uppercase,lowercase,capitalize
- text-decoration: none;    文本装饰    / none, underline, overline, line-through, blink
- white-space: normal; 处理空白符    / pre-line, normal, nowrap, pre, pre-wrap 


## CSS 字体

定义文本的字体系列、大小、加粗、风格（如斜体）和变形（如小型大写字母）。

- font-family: sans-serif;  指定字体系列 （可以指定多个使用 `,` 隔开）
- font-style:normal;  字体风格  \normal, italic, oblique
- font-variant:small-caps;  字体变形/设定小型大写字母
- font-weight:normal; 字体加粗  / bold, int
- font-size:60px; 字体大小  /px, em (如果要避免在 Internet Explorer 中无法调整文本的问题，许多开发者使用 em 单位代替 pixels。
, W3C 推荐使用 em 尺寸单位。)


## CSS 链接

- a:link - 普通的、未被访问的链接
- a:visited - 用户已访问的链接
- a:hover - 鼠标指针位于链接的上方
- a:active - 链接被点击的时刻

Note:

- a:hover 必须位于 a:link 和 a:visited 之后
- a:active 必须位于 a:hover 之后

常见链接样式：

- text-decoration 属性大多用于去掉链接中的下划线
- background-color 属性规定链接的背景色：


例子：
```css
a:link {text-decoration:none;}
a:visited {text-decoration:none;}
a:hover {text-decoration:underline;}
a:active {text-decoration:underline;}
```

## CSS 列表

- list-style  简写属性。用于把所有用于列表的属性设置于一个声明中。
- list-style-image  将图象设置为列表项标志。
- list-style-position 设置列表中列表项标志的位置。
- list-style-type 设置列表项标志的类型。

### 列表类型

修改用于列表项的标志类型

ex: 方块
```css
ul {list-style-type : square} 
```

### 列表项图像

```css
ul li {list-style-image : url(xxx.gif)}
```

## CSS 表格

## CSS 轮廓

- outline 在一个声明中设置所有的轮廓属性。  2
- outline-color 设置轮廓的颜色。  2
- outline-style 设置轮廓的样式。  2
- outline-width 设置轮廓的宽度。  2

# CSS 框模型

## CSS 框模型概述

![http://www.w3school.com.cn/i/ct_boxmodel.gif](http://www.w3school.com.cn/i/ct_boxmodel.gif)

- element : 元素。
- padding : 内边距，也有资料将其翻译为填充。
- border : 边框。
- margin : 外边距，也有资料将其翻译为空白或空白边。

属性：

- width
- margin
- padding
- height
- border


方向定制： margin，padding

- padding-bottom  设置元素的下内边距。 
- padding-left  设置元素的左内边距。
- padding-right 设置元素的右内边距。
- padding-top 设置元素的上内边距。

# CSS 定位 (Positioning)

## 一切皆为框

div、h1 或 p 元素常常被称为块级元素。这意味着这些元素显示为一块内容，即“块框”。

span 和 strong 等元素称为“行内元素”，这是因为它们的内容显示在行中，即“行内框”。



## CSS position 属性

position 属性值的含义：

- static：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分，行内元素则会创建一个或多个行框，置于其父元素中。
- relative：元素框偏移某个距离。元素仍保持其未定位前的形状，它原本所占的空间仍保留。
- absolute： 元素框从文档流完全删除，并相对于其包含块定位。包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。
- fixed：元素框的表现类似于将 position 设置为 absolute，不过其包含块是视窗本身。

其他属性：

- position  把元素放置到一个静态的、相对的、绝对的、或固定的位置中。
- top 定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移。
- right 定义了定位元素右外边距边界与其包含块右边界之间的偏移。
- bottom  定义了定位元素下外边距边界与其包含块下边界之间的偏移。
- left  定义了定位元素左外边距边界与其包含块左边界之间的偏移。
- overflow  设置当元素的内容溢出其区域时发生的事情。
- clip  设置元素的形状。元素被剪入这个形状之中，然后显示出来。
- vertical-align  设置元素的垂直对齐方式。
- z-index 设置元素的堆叠顺序。


### CSS 浮动

float 属性，其值：

- left  元素向左浮动。
- right 元素向右浮动。
- none  默认值。元素不浮动，并会显示在其在文本中出现的位置。
- inherit 规定应该从父元素继承 float 属性的值。

## CSS 选择器

### CSS 元素选择器

### CSS 选择器分组

### CSS 类选择器

### CSS ID 选择器

### CSS 属性选择器

### CSS 后代选择器

### CSS 子元素选择器

### CSS 相邻兄弟选择器

### CSS 伪类 (Pseudo-classes)


### CSS 伪元素 (Pseudo-elements)


